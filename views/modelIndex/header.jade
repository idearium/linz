.model-title
	h1
		a(href='' + linz.api.getAdminLink(model))= model.formtools.model.plural
.model-actions
	if model.grid.canCreate
		.actions
			span.create
				a.btn.btn-primary(href='' + linz.api.getAdminLink(model, 'new'))
					i.fa.fa-plus
					| Create a new #{label.singular}
	if model.grid.actions && model.grid.actions.length
		.custom-actions
			if model.grid.actions.length === 1
				for action in model.grid.actions
					a.btn.btn-default(href='' + linz.api.getAdminLink(model, action.action))= action.label
			else
				.dropdown
					button.btn.btn-default.dropdown-toggle(type='button', data-toggle='dropdown')
						| Actions&nbsp;
						span.caret
					ul.dropdown-menu(role='menu')
						for action in model.grid.actions
							li(role='presentation')
								a(role='menuitem', tabindex='-1', href='' + linz.api.getAdminLink(model, action.action))= action.label

	if model.grid.groupActions && model.grid.groupActions.length
		.group-actions.hidden
			if model.grid.groupActions.length === 1
				a.btn.btn-default(href='' + linz.api.getAdminLink(model, groupAction.action) data-linz-control="group-action" data-target="#groupActionModal")= groupAction.label
			else
				.dropdown
					button.btn.btn-default.dropdown-toggle(type='button', data-toggle='dropdown')
						| Group actions&nbsp;
						span.caret
					ul.dropdown-menu(role='menu')
						for groupAction in model.grid.groupActions
							li(role='presentation')
								a(role='menuitem', tabindex='-1', href='' + linz.api.getAdminLink(model, groupAction.action) data-linz-control='group-action' data-target='#groupActionModal')= groupAction.label

	if model.grid.export.enable
		.export
			a.btn.btn-default(href='' + linz.api.getAdminLink(model, model.grid.export.action) data-linz-control="export" data-target="#exportModal")= model.grid.export.label
