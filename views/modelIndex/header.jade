.row.grid-header
	.col-md-6.col-xs-12
		h1
			a(href='' + linz.get('admin path') + '/model/#{model.modelName}/list')= model.label
		ul.sort.nav.nav-pills
			if model.grid.sortBy.length
				li.dropdown
					a(data-toggle='dropdown', role='button', class="btn btn-default") Sort by
					ul.dropdown-menu(role='menu')
						for sortField in model.grid.sortBy
							li
								a(data-sort-field='' + sortField.field + '')= sortField['label']
			if Object.keys(model.grid.filters).length
				li.dropdown.addFilterBtn
					a(data-toggle='dropdown', role='button', class="btn btn-default") Add filter
					ul.dropdown-menu(role='menu')
						for filterField, key in model.grid.filters
							li
								a.control-addFilter(data-filter-field='' + key + '')= filterField['label']
								span.controlField!= filterField.filter.formControls
	.col-md-6.col-xs-12
		.actions
			for action in model.grid.actions
				a.btn.btn-default.pull-right(href='' + linz.get('admin path') + '/model/#{model.modelName}/#{action.action}')= action.label
			if model.grid.canCreate
				span.create
					a.btn.btn-primary.pull-right(href='' + linz.get('admin path') + '/model/#{model.modelName}/new') Create a new #{model.singular}
form.filters(method="post")
	input.selectedFilters(type='hidden', name='selectedFilters', value='' + ((form.selectedFilters) ? form.selectedFilters : '') + '')
	.filter-list
		if model.grid.activeFilters
			for activeFilter, index in model.grid.activeFilters
				for filterControl in activeFilter
					include filter
	button.btn.btn-default(type="submit") Filter
	template(id="filter")
		include filter
script var filters = !{JSON.stringify(form)};
